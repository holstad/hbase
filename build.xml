<?xml version="1.0"?>

<!-- 
Before you can run these subtargets directly, you need 
to call at top-level: ant deploy-contrib compile-core-test
-->
<project name="hbase" default="jar">

  <import file="../build-contrib.xml"/>

  <!-- Override jar target to specify main class -->
  <target name="jar" depends="compile">
    <jar
      jarfile="${build.dir}/hadoop-${name}.jar"
      basedir="${build.classes}"      
    />
  </target>

  <!-- Override compile-test  target so can generate a hbase 
       test jar that has test and hbase classes. 
   --> 
  <target name="compile-test" depends="compile" if="test.available"> 
    <echo message="contrib: ${name}"/> 
    <javac 
     encoding="${build.encoding}" 
     srcdir="${src.test}" 
     includes="**/*.java" 
     destdir="${build.test}" 
     debug="${javac.debug}"> 
      <classpath refid="test.classpath"/> 
    </javac>
    <jar jarfile="${build.dir}/hadoop-${name}-test.jar" >
      <fileset dir="${build.test}" includes="org/**" />
      <fileset dir="${build.classes}" />
      <fileset dir="${src.test}" includes="**/*.properties" />
      <manifest>
        <attribute name="Main-Class"
          value="org/apache/hadoop/hbase/PerformanceEvaluation"/>
      </manifest>
    </jar>
  </target>

  <!-- the unit test classpath
    Copied from ../build-contrib.xml so can add 
  -->
  <path id="test.classpath">
    <pathelement location="${build.test}" />
    <pathelement location="${hadoop.root}/build/test/classes"/>
    <pathelement location="${hadoop.root}/src/contrib/test"/>
    <pathelement location="${conf.dir}"/>
    <pathelement location="${hadoop.root}/build"/>
    <pathelement location="${src.test}"/>
    <path refid="classpath"/>
  </path>
  
  <target name="test">
    <antcall target="hadoopbuildcontrib.test"/>
  </target>  

</project>
